@model Promotion.Coupon.Areas.Admin.Models.PartitipationsReportViewModel
@{
    ViewBag.Title = "Participations";
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
}

@*<input type="hidden" id="SerializedPersonsChartData" value='@Html.Raw(Model.SerializedPersonsChartData)' />*@
<input type="hidden" id="SerializedReceiptsData" value='@Html.Raw(Model.SerializedReceiptsData)' />
<input type="hidden" id="SerializedLineChartTicks" value='@Html.Raw(Model.SerializedLineChartTicks)' />

<div class="page-header">
    <div class="page-title">
        <h3>Relatório de Participações</h3>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <!-- Filled blue -->
        <div class="panel panel-default">
            <div class="panel-heading">
                <h6 class="panel-title">
                    <i class="icon-search2"></i> Filtro de busca
                </h6>
            </div>
            <div class="panel-body">
                <form class="form-horizontal" role="form" action="" method="get">
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Data Inicial: </label>
                        <div class="col-sm-6">
                            <input type="text" id="Participations_From" name="Participations.From" class="form-control from-date" value="@Model.from.ToString("dd/MM/yyyy")">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Data Final: </label>
                        <div class="col-sm-6">
                            <input type="text" id="Participations_To" name="Participations.To" class="form-control to-date" value="@Model.to.ToString("dd/MM/yyyy")">
                        </div>
                    </div>
                    <div class="form-actions text-right">
                        <button type="submit" class="btn btn-primary"><i class="icon-search2"></i> Filtrar</button>
                    </div>
                </form>
            </div>
        </div>
        <!-- /filled blue -->
    </div>
</div>

<br />
<br />
<br />

@*<div class="row">
    <div class="col-md-12">
        <!-- Filled blue -->
        <div class="panel panel-default">
            <div class="panel-heading">
                <h6 class="panel-title">
                    <i class="icon-stats-up"></i> Evolução de novos cadastros (dados pessoais)
                </h6>

                <div class="pull-right">
                    <a target="_blank" href="/admin/report/cpf-export" class="btn btn-xs btn-success"><i class="icon-file-excel"></i> Exportar (@Model.PersonCount registros no total)</a>
                </div>
            </div>
            <div class="panel-body">
                <div class="graph-standard" id="cpf_evolution"></div>
            </div>
        </div>
        <!-- /filled blue -->
    </div>
</div>*@

<div class="row">
    <div class="col-md-12">
        <!-- Filled blue -->
        <div class="panel panel-default">
            <div class="panel-heading">
                <h6 class="panel-title">
                    <i class="icon-stats-up"></i> Evolução de cupons enviados
                </h6>

                <div class="pull-right">
                    <a target="_blank" href="/admin/report/receipt-export" class="btn btn-xs btn-success"><i class="icon-file-excel"></i> Exportar (@Model.ReceiptCount registros no total)</a>
                </div>
            </div>
            <div class="panel-body">
                <div class="graph-standard" id="receipt_evolution"></div>
            </div>
        </div>
        <!-- /filled blue -->
    </div>
</div>

@*<div class="panel panel-default" style="display:none">
    <div class="panel-heading"><h6 class="panel-title"><i class="icon-table2"></i> Listagem dos Participantes</h6></div>
    <div class="table-responsive">
        <table class="table" id="person-table">
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>E-mail</th>
                    <th>Cidade</th>
                    <th>UF</th>
                    <th>Data do Cadastro</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in Model.People)
                {
                    <tr>
                        <td>@p.name</td>
                        <td>@p.email</td>

                        @if(p.Address != null){
                            <td>@p.Address.City.name</td>
                            <td>@p.Address.City.state</td>
                        }
                        else
                        {
                            <td></td>
                            <td></td>
                        }  
                        <td>@p.dtCreation.ToString("dd/MM/yyyy")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>*@

@section scripts {
    <script>
        $(function () {
            $('#Participations_From').datepicker({
                showOtherMonths: true,
                dateFormat: 'dd/mm/yy'
            });
            $('#Participations_To').datepicker({
                showOtherMonths: true,
                dateFormat: 'dd/mm/yy'
            });

            $('#person-table').DataTable({
                "language": dtLanguage
            });

            //var SerializedPersonsChartData = eval($("#SerializedPersonsChartData").val());
            var SerializedReceiptsData = eval($("#SerializedReceiptsData").val());
            var SerializedLineChartTicks = eval($("#SerializedLineChartTicks").val());

            //$.plot($("#cpf_evolution"), [{
            //    label: "Cadastros",
            //    data: SerializedPersonsChartData,
            //    color: '#1aacf0'
            //}], {
            //    xaxis: {
            //        mode: null,
            //        ticks: SerializedLineChartTicks,
            //        tickLength: 1,
            //        axisLabel: 'Month',
            //        axisLabelUseCanvas: true,
            //        axisLabelFontSizePixels: 30,
            //        axisLabelPadding: 6
            //    },
            //    yaxis: {
            //        axisLabel: 'Amount',
            //        axisLabelUseCanvas: true,
            //        minTickSize: 1,
            //        tickDecimals: 0,
            //        axisLabelFontSizePixels: 8,
            //        autoscaleMargin: 0.01,
            //        axisLabelPadding: 5,
            //        tickLength: "full"
            //    },
            //    series: {
            //        lines: {
            //            show: true,
            //            fill: true,
            //            fillColor: { colors: [{ opacity: 0.2 }, { opacity: 0.2 }] },
            //            lineWidth: 1.5
            //        },
            //        points: {
            //            show: true,
            //            radius: 2.5,
            //            fill: true,
            //            fillColor: "#ffffff",
            //            symbol: "circle",
            //            lineWidth: 1.1
            //        }
            //    },
            //    grid: { hoverable: true, clickable: true },
            //    legend: {
            //        show: false
            //    }
            //});                             

            $.plot($("#receipt_evolution"), [{
                label: "Cadastros",
                data: SerializedReceiptsData,
                color: '#1aacf0'
            }], {
                xaxis: {
                    mode: null,
                    ticks: SerializedLineChartTicks,
                    tickLength: 1,
                    axisLabel: 'Month',
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 30,
                    axisLabelPadding: 6
                },
                yaxis: {
                    axisLabel: 'Amount',
                    axisLabelUseCanvas: true,
                    minTickSize: 1,
                    tickDecimals: 0,
                    axisLabelFontSizePixels: 8,
                    autoscaleMargin: 0.01,
                    axisLabelPadding: 5,
                    tickLength: "full"
                },
                series: {
                    lines: {
                        show: true,
                        fill: true,
                        fillColor: { colors: [{ opacity: 0.2 }, { opacity: 0.2 }] },
                        lineWidth: 1.5
                    },
                    points: {
                        show: true,
                        radius: 2.5,
                        fill: true,
                        fillColor: "#ffffff",
                        symbol: "circle",
                        lineWidth: 1.1
                    }
                },
                grid: { hoverable: true, clickable: true },
                legend: {
                    show: false
                }
            });
        });

        function showTooltip(x, y, contents) {
            $('<div id="tooltip" class="chart-tooltip">' + contents + '</div>').css({
                position: 'absolute',
                display: 'none',
                top: y - 46,
                left: x - 9,
                'z-index': '9999',
                opacity: 0.9
            }).appendTo("body").fadeIn(200);
        }

        var previousPoint = null;
        //$("#cpf_evolution").bind("plothover", function (event, pos, item) {
        //    $("#x").text(pos.x.toFixed(2));
        //    $("#y").text(pos.y.toFixed(2));

        //    if ($("#cpf_evolution").length > 0) {
        //        if (item) {
        //            if (previousPoint != item.dataIndex) {
        //                previousPoint = item.dataIndex;

        //                $("#tooltip").remove();
        //                var x = item.datapoint[0].toFixed(0),
        //                    y = item.datapoint[1].toFixed(0);

        //                showTooltip(item.pageX, item.pageY,
        //                            item.series.label + ": " + "<strong>" + y + "</strong>");
        //            }
        //        }
        //        else {
        //            $("#tooltip").remove();
        //            previousPoint = null;
        //        }
        //    }
        //});

        //$("#cpf_evolution").bind("plotclick", function (event, pos, item) {
        //    if (item) {
        //        $("#clickdata").text("You clicked point " + item.dataIndex + " in " + item.series.label + ".");
        //        plot.highlight(item.series, item.datapoint);
        //    }
        //});
    </script>
}
