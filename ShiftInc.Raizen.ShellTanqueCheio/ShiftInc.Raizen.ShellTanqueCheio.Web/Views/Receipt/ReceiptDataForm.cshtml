@model ShiftInc.Raizen.ShellTanqueCheio.Web.Models.ReceiptViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>ReceiptDataForm</title>
    <link rel="stylesheet" href="/Content/css/index.css">
</head>
<body>
    <form action="/promotion/receipt/save" method="post" enctype="multipart/form-data" name="internal.frm" autocomplete="off">
        @Html.HiddenFor(e => e.Receipt.idPerson)
        @Html.HiddenFor(e => e.cpf)
        @Html.HiddenFor(e => e.productType)
        <div class="cupom">
            <header>
                <span class="disable">
                    <strong>Dados Pessoais</strong>
                    <small>Os campos marcados com * são de preenchimento obrigatório</small>
                </span>
                <span>
                    <strong>Cadastro do Cupom</strong>
                    <small>Envie uma foto do cupom fiscal.</small>
                </span>
                <a href="javascript:;">&times;</a>
            </header>
        @{
        	if (Model.ErrorCode == "error_another_receipt_today")
        	{
        	<div>
            	<h2 class="success">
            		Olá @Model.Receipt.Person.name.Split(' ')[0],
            		<strong>Você excedeu o número de participações diárias. Consulte o regulamento.</strong>
            	</h2>
            	<p>
	            	Mas fique tranquilo: guarde seu cupom e participe amanhã.
            	</p>
                <!--a href="#semLink" target="_blank" class="btn desktop">Conheça também a promoção Tanque Cheio o Ano Todo.</a-->
                <!--a href="#semLink" target="_blank" class="btn mobile">Conheça outras promoções.</a>-->
        	</div>
        	}
        	else if (Model.ErrorCode == "error_excedeed_maximum_receipt_per_person")
        	{
        	<div>
            	<h2 class="success">
            		Olá @Model.Receipt.Person.name.Split(' ')[0],
            		<strong>Agradecemos sua participação.</strong>
            	</h2>
            	    @if (Model.ProductList.Select(pl => pl.type).Contains("v-power"))
                    {
                        <p>
            		        Infelizmente você só pode participar 30 vezes durante toda a promoção.
            	        </p>
                    }
                    else
                    {
                        <p>
            		        Infelizmente você só pode participar 5 vezes durante toda a promoção.
            	        </p>
                    }                
                
                <!--a href="#semLink" target="_blank" class="btn desktop">Conheça também a promoção Tanque Cheio o Ano Todo.</a-->
                <!--a href="#semLink" target="_blank" class="btn mobile">Conheça outras promoções.</a-->
        	</div>
        	}
        	else
        	{
            <div>
                <h2><strong>Olá @Model.Receipt.Person.name.Split(' ')[0], cadastre aqui seu cupom.</strong></h2>
                <div class="upload">
                	@if (Model.ErrorCode == "error_upload_not_valid")
                    {
                    <label data-valid="false">
                        <strong>
                            Carregar Imagem
                            <small class="mobile">*Para um carregamento mais rápido da imagem, recomendamos que ela não exceda 500kb.</small>
                        </strong>
                        <input name="filename" disabled type="text" id="image-name">
                        <span><span class="normal">Imagem inválida. Carregue novamente.</span></span>
                    </label>
                    }
                    else
                    {
                    <label>
                        <strong>
                            Carregar Imagem (Extensões: gif, jpg, jpeg, pjpeg, png)
                            <small class="mobile">*Para um carregamento mais rápido da imagem, recomendamos que ela não exceda 500kb.</small>
                        </strong>
                        <input name="filename" disabled type="text" id="image-name">
                        <span><span class="normal">Imagem inválida. Carregue novamente.</span></span>
                    </label>
                    }
                    <label>
                        <input name="ReceiptFile" data-required type="file" accept="image/*">
                        <span class="btn">Buscar imagem</span>
                    </label>
                </div>
                <div class="company">
                    <label>
                        @if (Model.ProductList.Select(pl => pl.type).Contains("v-power"))
                        {
                            <strong>Produto V-Power adquirido</strong>
                        }
                        else
                        {
                            <strong>Lubrificante adquirido</strong>
                        }                      
                        <select name="Receipt.idProduct" data-required>
                            <option value="" disabled="" selected="">Selecione o produto</option>
                            @foreach (var product in Model.ProductList)
                            {
                                <option value="@product.idProduct">@product.name</option>
                            }
                        </select><span></span>
                    </label>
                    @if (Model.ErrorCode == "error_vendor_not_allowed")
                    {
                    <label data-valid="false" data-custom="0">
                        <strong>CNPJ do Estabelecimento</strong>
                        <input name="Receipt.vendorCNPJ" type="text" value="@Model.Receipt.vendorCNPJ" placeholder="00.000.000/0000-00"  data-pattern="\d{2}(\.)*\d{3}(\.)*\d{3}(\/)*\d{4}(\-)*\d{2}" data-maxlength="18" data-required data-mask>
                        <span>
                            <span class="normal">CNPJ inválido. Digite novamente.</span>
                            <span class="validate0">Posto não participante.</span>
                        </span>
                    </label>
                    }
                    else
                    {
                    <label>
                        <strong>CNPJ do Estabelecimento</strong>
                        <input name="Receipt.vendorCNPJ" type="text" value="@Model.Receipt.vendorCNPJ" placeholder="00.000.000/0000-00"  data-pattern="\d{2}(\.)*\d{3}(\.)*\d{3}(\/)*\d{4}(\-)*\d{2}" data-maxlength="18" data-required data-mask>
                        <span><span class="normal">CNPJ inválido. Digite novamente.</span></span>
                    </label>
                    }
                </div>
                @{
                    if(Model.Receipt.Person.isLubTerms != 1 || Model.Receipt.Person.isVPowerTerms != 1){  
                               
                        if (Model.productType == "v-power" && Model.Receipt.Person.isVPowerTerms == 0)
                        {
                            <div class="termos">
                                <input type="checkbox" name="aceitoTermos" data-required>
                                <p>
                                    @Html.Raw("Aceito o")
                                    <a href="/Content/regulamento/Regulamento_Tanque_Cheio_Toda_Hora.pdf" target="_blank">regulamento</a>
                                </p>
                            </div>
                                <br><br>
                        }
                        else if (Model.productType == "lubrificantes" && Model.Receipt.Person.isLubTerms == 0)
                        {
                            <div class="termos">
                                <input type="checkbox" name="aceitoTermos" data-required>
                                <p>
                                    @Html.Raw("Aceito o")
                                    <a href="/Content/regulamento/Regulamento_Tanque_Cheio_Ano_Todo.pdf" target="_blank">regulamento</a>
                                </p>
                            </div>
                            <br><br>
                        }  
                    }
                }                
                <input type="hidden" name="person.isVPowerTerms" value="@(Model.productType == "v-power" ? "1" : "0")">
                <input type="hidden" name="person.isLubTerms" value="@(Model.productType == "lubrificantes" ? "1" : "0")"> 
            </div>
            <input type="submit" value="Enviar" />
            }
        }
        </div>
        @{
            if(Model.Receipts.Count >= 1)
            {                
                <div class="enviados">
                    <h3>Histórico de Cupons Enviados</h3>
                    <ul class="abas">                        
                        @if (Model.Receipts.Where(rs => rs.Product.type == "v-power").Count() > 0)
                        {
                            <li><span class="active">V-Power</span></li>
                        }

                        @if (Model.Receipts.Where(rs => rs.Product.type == "lubrificantes").Count() > 0)
                        {
                            <li><span class="active">Lubrificantes</span></li>
                        }
                    </ul>
                    <div>
                        @{
                            var isWinnerClass = "";
                            var listCupom = "";
                            var len = 0;
                            if (Model.Receipts.Where(rs => rs.Product.type == "v-power").Count() > 0)
                            {
                                <ul class="vpower active">                                    
                                    @foreach (var receipt in Model.Receipts.Where(rs => rs.Product.type == "v-power"))
                                    {
                                        if(receipt.isWinner == true){
                                            isWinnerClass = " class='premiado'";
                                        }
                                        @Html.Raw("<li><span>CNPJ Estabelecimento: " + receipt.vendorCNPJ + "</span><a href='/receipt/file?id=" + receipt.idReceipt.ToString().Base64Encode() + "'" + isWinnerClass + " target='_blank'>ver imagem do cupom</a></li>");
                                        isWinnerClass = "";
                                    }
                                </ul>
                            }

                            if (Model.Receipts.Where(rs => rs.Product.type == "lubrificantes").Count() > 0)
                            {
                                <ul class="lub">
                                    @foreach (var receipt in Model.Receipts.Where(rs => rs.Product.type == "lubrificantes"))
                                    {
                                        listCupom = "";
                                        len = receipt.LuckyCodes.Count();
                                        for (int i = 0; i < len; i++)
                                        {
                                            var lucky = receipt.LuckyCodes.ElementAt(i);
                                            isWinnerClass = lucky.isWinner == true ? " class='premiado'" : "";
                                            listCupom += "<tr" + Html.Raw(isWinnerClass) + ">";
                                            if (i == 0)
                                            {
                                                listCupom += "<td class='td1' rowspan='" + len + "'>" + String.Format("{0:dd/MM/yyyy}", receipt.dtCreation) + "</td>";
                                            }
                                            var dt = String.Format("{0:dd/MM/yyyy}", lucky.dtRaffle);
                                            listCupom += "<td class='td2'>" + dt + "</td>";
                                            listCupom += "<td class='td3'>" + (lucky.code.ToString().Length == 6 ? lucky.code.ToString().Insert(1, "-") : (lucky.code.ToString().Length == 7 ? lucky.code.ToString().Insert(2, "-") : (lucky.code.ToString().Length == 8 ? lucky.code.ToString().Insert(3, "-") : ""))) + "</td>";
                                            listCupom += "<td class='td4'><span></span></td></tr>";
                                        }
                                        @Html.Raw("<li><span>CNPJ Estabelecimento: " + receipt.vendorCNPJ + "</span><a href='/receipt/file?id=" + receipt.idReceipt.ToString().Base64Encode() + "' target='_blank'>ver imagem do cupom</a>");
                                        @Html.Raw("<table class='cupom'><thead><tr><th class='th1'>Data do cadastro</th><th class='th2'>Data do sorteio</th><th class='td3'>Número da Sorte</th><th class='td4'>Resultado</th></tr></thead>");
                                        @Html.Raw("<tbody>" + @listCupom + "</tbody></table></li>");
                                    }
                                </ul>
                            }
						}                        
                    </div>
                </div>            
            }
        }
    </form>
    <div class="aguarde">
    	<h1>Aguarde enquanto sua imagem é carregada.</h1>
    	<p>Se demorar, por favor, certifique a qualidade de conexão com a internet.</p>
    	<small><span></span><span></span><span></span></small>
    </div>
    <script src="/Scripts/js.js"></script>
    <script>
    @{
        if (Model.ErrorCode != null)
        {
            @Html.Raw("window.errorCode = {\"error\" : \"" + Model.ErrorCode + "\"}");
        }
        //  "error_another_receipt_today"; MSG: Quantidade de participações do dia atingida 
        //  "error_excedeed_maximum_receipt_per_person";  MSG: Quantidade de participações do dia atingida 
        //  "error_vendor_not_allowed";  MSG: Estabelecimento não participa da promoção      
        //  "error_upload_not_valid"    MSG: erro no carregamento da imagem             
        //  "error_model_not_valid"
    }
    </script>
</body>
</html>
